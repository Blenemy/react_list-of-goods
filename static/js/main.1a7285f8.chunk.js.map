{"version":3,"sources":["App.tsx","List.tsx","index.tsx"],"names":["SortType","List","goods","this","props","map","good","React","PureComponent","goodsFromServer","getReorderedGoods","sortType","isReversed","visibleGoods","sort","a","b","LENGTH","length","ALPHABET","localeCompare","reverse","App","state","NONE","reverseGoods","setState","sortGoodsByLength","sortGoodsAlphabetically","reset","className","type","classnames","button","onClick","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAmBKA,E,wGCbQC,EAAb,4JACE,WACE,IAAQC,EAAUC,KAAKC,MAAfF,MAER,OACE,6BACGA,EAAMG,KAAI,SAAAC,GAAI,OACb,oBAEE,UAAQ,OAFV,SAIGA,GAHIA,YARjB,GAA0BC,IAAMC,eDAnBC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAmBF,SAASC,EACPR,EADF,GAGG,IADCS,EACF,EADEA,SAAUC,EACZ,EADYA,WAENC,EAAY,YAAOX,GAmBzB,OAjBAW,EAAaC,MAAK,SAACC,EAAGC,GACpB,OAAQL,GACN,KAAKX,EAASiB,OACZ,OAAOF,EAAEG,OAASF,EAAEE,OAEtB,KAAKlB,EAASmB,SACZ,OAAOJ,EAAEK,cAAcJ,GAEzB,QACE,OAAO,MAITJ,GACFC,EAAaQ,UAGRR,G,SAvCJb,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA0CE,IAAMsB,EAAb,4MACEC,MAAQ,CACNX,YAAY,EACZD,SAAUX,EAASwB,MAHvB,EAMEC,aAAe,WACb,EAAKC,UAAS,SAAAH,GAAK,MAAK,CACtBX,YAAaW,EAAMX,gBARzB,EAYEe,kBAAoB,WAClB,EAAKD,SAAS,CAAEf,SAAUX,EAASiB,UAbvC,EAgBEW,wBAA0B,WACxB,EAAKF,SAAS,CAAEf,SAAUX,EAASmB,YAjBvC,EAoBEU,MAAQ,WACN,EAAKH,SAAS,CACZd,YAAY,EACZD,SAAUX,EAASwB,QAvBzB,4CA2BE,WACE,OACE,sBAAKM,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAW,CACpBC,QAAQ,EACR,WAAW,EACX,WAAY9B,KAAKoB,MAAMZ,WAAaX,EAASmB,WAE/Ce,QAAS/B,KAAKyB,wBAPhB,iCAYA,wBACEG,KAAK,SACLG,QAAS/B,KAAKwB,kBACdG,UAAWE,IAAW,CACpBC,QAAQ,EACR,cAAc,EACd,WAAY9B,KAAKoB,MAAMZ,WAAaX,EAASiB,SANjD,4BAYA,wBACEc,KAAK,SACLD,UAAWE,IAAW,CACpBC,QAAQ,EACR,cAAc,EACd,YAAa9B,KAAKoB,MAAMX,aAE1BsB,QAAS/B,KAAKsB,aAPhB,sBAYEtB,KAAKoB,MAAMZ,WAAaX,EAASwB,MAAQrB,KAAKoB,MAAMX,aACpD,wBACEmB,KAAK,SACLD,UAAU,4BACVI,QAAS/B,KAAK0B,MAHhB,sBASJ,cAAC,EAAD,CAAM3B,MAAOQ,EAAkBD,EAAiBN,KAAKoB,gBA7E7D,GAAyBhB,IAAM4B,WE1D/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.1a7285f8.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classnames from 'classnames';\nimport { List } from './List';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nfunction getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((a, b) => {\n    switch (sortType) {\n      case SortType.LENGTH:\n        return a.length - b.length;\n\n      case SortType.ALPHABET:\n        return a.localeCompare(b);\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  reverseGoods = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  sortGoodsByLength = () => {\n    this.setState({ sortType: SortType.LENGTH });\n  };\n\n  sortGoodsAlphabetically = () => {\n    this.setState({ sortType: SortType.ALPHABET });\n  };\n\n  reset = () => {\n    this.setState({\n      isReversed: false,\n      sortType: SortType.NONE,\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={classnames({\n              button: true,\n              'is-info': true,\n              'is-light': this.state.sortType !== SortType.ALPHABET,\n            })}\n            onClick={this.sortGoodsAlphabetically}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            onClick={this.sortGoodsByLength}\n            className={classnames({\n              button: true,\n              'is-success': true,\n              'is-light': this.state.sortType !== SortType.LENGTH,\n            })}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={classnames({\n              button: true,\n              'is-warning': true,\n              'is-light': !this.state.isReversed,\n            })}\n            onClick={this.reverseGoods}\n          >\n            Reverse\n          </button>\n\n          {(this.state.sortType !== SortType.NONE || this.state.isReversed) && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={this.reset}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n        <List goods={getReorderedGoods(goodsFromServer, this.state)} />\n      </div>\n    );\n  }\n}\n","import React from 'react';\n\ntype Props = {\n  goods: string[],\n};\n\nexport class List extends React.PureComponent<Props, {}> {\n  render() {\n    const { goods } = this.props;\n\n    return (\n      <ul>\n        {goods.map(good => (\n          <li\n            key={good}\n            data-cy=\"Good\"\n          >\n            {good}\n          </li>\n        ))}\n      </ul>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}