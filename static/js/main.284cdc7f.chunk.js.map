{"version":3,"sources":["App.tsx","goodsList.tsx","index.tsx"],"names":["SortType","List","goods","this","props","map","good","React","PureComponent","goodsFromServer","App","state","isReversed","sortType","NONE","reverseGoods","setState","sortGoodsByLength","LENGTH","sortGoodsAlpha","ALPABET","reset","className","type","classnames","button","onClick","visibleGoods","sort","a","b","length","localeCompare","reverse","getReorderedGoods","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAmBKA,E,wGCbQC,EAAb,4JACE,WACE,IAAQC,EAAUC,KAAKC,MAAfF,MAER,OACE,6BACGA,EAAMG,KAAI,SAAAC,GAAI,OACb,oBAEE,UAAQ,OAFV,SAIGA,GAHIA,YARjB,GAA0BC,IAAMC,eDAnBC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGT,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KAgBE,IAAMU,EAAb,4MACEC,MAAQ,CACNC,YAAY,EACZC,SAAUb,EAASc,MAHvB,EAMEC,aAAe,WACb,EAAKC,UAAS,SAAAL,GAAK,MAAK,CACtBC,YAAaD,EAAMC,gBARzB,EAYEK,kBAAoB,WAClB,EAAKD,SAAS,CAAEH,SAAUb,EAASkB,UAbvC,EAgBEC,eAAiB,WACf,EAAKH,SAAS,CAAEH,SAAUb,EAASoB,WAjBvC,EAoBEC,MAAQ,WACN,EAAKL,SAAS,CACZJ,YAAY,EACZC,SAAUb,EAASc,QAvBzB,4CA2BE,WA2BE,OACE,sBAAKQ,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAW,CACpBC,QAAQ,EACR,WAAW,EACX,WAAYtB,KAAKQ,MAAME,WAAab,EAASoB,UAE/CM,QAASvB,KAAKgB,eAPhB,iCAYA,wBACEI,KAAK,SACLG,QAASvB,KAAKc,kBACdK,UAAWE,IAAW,CACpBC,QAAQ,EACR,cAAc,EACd,WAAYtB,KAAKQ,MAAME,WAAab,EAASkB,SANjD,4BAYA,wBACEK,KAAK,SACLD,UAAWE,IAAW,CACpBC,QAAQ,EACR,cAAc,EACd,YAAatB,KAAKQ,MAAMC,aAE1Bc,QAASvB,KAAKY,aAPhB,sBAYEZ,KAAKQ,MAAME,WAAab,EAASc,MAAQX,KAAKQ,MAAMC,aACpD,wBACEW,KAAK,SACLD,UAAU,4BACVI,QAASvB,KAAKkB,MAHhB,sBASJ,cAAC,EAAD,CAAMnB,MA3EV,SACEA,EADF,GAGG,IADCW,EACF,EADEA,SAAUD,EACZ,EADYA,WAENe,EAAY,YAAOzB,GAmBzB,OAjBAyB,EAAaC,MAAK,SAACC,EAAGC,GACpB,OAAQjB,GACN,KAAKb,EAASkB,OACZ,OAAOW,EAAEE,OAASD,EAAEC,OAEtB,KAAK/B,EAASoB,QACZ,OAAOS,EAAEG,cAAcF,GAEzB,QACE,OAAO,MAITlB,GACFe,EAAaM,UAGRN,EAoDQO,CAAkBzB,EAAiBN,KAAKQ,gBAvG7D,GAAyBJ,IAAM4B,WEhC/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.284cdc7f.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classnames from 'classnames';\nimport { List } from './goodsList';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  reverseGoods = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  sortGoodsByLength = () => {\n    this.setState({ sortType: SortType.LENGTH });\n  };\n\n  sortGoodsAlpha = () => {\n    this.setState({ sortType: SortType.ALPABET });\n  };\n\n  reset = () => {\n    this.setState({\n      isReversed: false,\n      sortType: SortType.NONE,\n    });\n  };\n\n  render() {\n    function getReorderedGoods(\n      goods: string[],\n      { sortType, isReversed }: ReorderOptions,\n    ) {\n      const visibleGoods = [...goods];\n\n      visibleGoods.sort((a, b) => {\n        switch (sortType) {\n          case SortType.LENGTH:\n            return a.length - b.length;\n\n          case SortType.ALPABET:\n            return a.localeCompare(b);\n\n          default:\n            return 0;\n        }\n      });\n\n      if (isReversed) {\n        visibleGoods.reverse();\n      }\n\n      return visibleGoods;\n    }\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={classnames({\n              button: true,\n              'is-info': true,\n              'is-light': this.state.sortType !== SortType.ALPABET,\n            })}\n            onClick={this.sortGoodsAlpha}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            onClick={this.sortGoodsByLength}\n            className={classnames({\n              button: true,\n              'is-success': true,\n              'is-light': this.state.sortType !== SortType.LENGTH,\n            })}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={classnames({\n              button: true,\n              'is-warning': true,\n              'is-light': !this.state.isReversed,\n            })}\n            onClick={this.reverseGoods}\n          >\n            Reverse\n          </button>\n\n          {(this.state.sortType !== SortType.NONE || this.state.isReversed) && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={this.reset}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n        <List goods={getReorderedGoods(goodsFromServer, this.state)} />\n      </div>\n    );\n  }\n}\n","import React from 'react';\n\ntype Props = {\n  goods: string[],\n};\n\nexport class List extends React.PureComponent<Props, {}> {\n  render() {\n    const { goods } = this.props;\n\n    return (\n      <ul>\n        {goods.map(good => (\n          <li\n            key={good}\n            data-cy=\"Good\"\n          >\n            {good}\n          </li>\n        ))}\n      </ul>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}